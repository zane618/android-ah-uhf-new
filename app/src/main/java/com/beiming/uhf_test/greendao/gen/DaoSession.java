package com.beiming.uhf_test.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.beiming.uhf_test.bean.FileBean;
import com.beiming.uhf_test.bean.LoginBean;
import com.beiming.uhf_test.bean.MeasBoxBean;
import com.beiming.uhf_test.bean.MeterBean;
import com.beiming.uhf_test.bean.pic.PhotoBean;

import com.beiming.uhf_test.greendao.gen.FileBeanDao;
import com.beiming.uhf_test.greendao.gen.LoginBeanDao;
import com.beiming.uhf_test.greendao.gen.MeasBoxBeanDao;
import com.beiming.uhf_test.greendao.gen.MeterBeanDao;
import com.beiming.uhf_test.greendao.gen.PhotoBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig fileBeanDaoConfig;
    private final DaoConfig loginBeanDaoConfig;
    private final DaoConfig measBoxBeanDaoConfig;
    private final DaoConfig meterBeanDaoConfig;
    private final DaoConfig photoBeanDaoConfig;

    private final FileBeanDao fileBeanDao;
    private final LoginBeanDao loginBeanDao;
    private final MeasBoxBeanDao measBoxBeanDao;
    private final MeterBeanDao meterBeanDao;
    private final PhotoBeanDao photoBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        fileBeanDaoConfig = daoConfigMap.get(FileBeanDao.class).clone();
        fileBeanDaoConfig.initIdentityScope(type);

        loginBeanDaoConfig = daoConfigMap.get(LoginBeanDao.class).clone();
        loginBeanDaoConfig.initIdentityScope(type);

        measBoxBeanDaoConfig = daoConfigMap.get(MeasBoxBeanDao.class).clone();
        measBoxBeanDaoConfig.initIdentityScope(type);

        meterBeanDaoConfig = daoConfigMap.get(MeterBeanDao.class).clone();
        meterBeanDaoConfig.initIdentityScope(type);

        photoBeanDaoConfig = daoConfigMap.get(PhotoBeanDao.class).clone();
        photoBeanDaoConfig.initIdentityScope(type);

        fileBeanDao = new FileBeanDao(fileBeanDaoConfig, this);
        loginBeanDao = new LoginBeanDao(loginBeanDaoConfig, this);
        measBoxBeanDao = new MeasBoxBeanDao(measBoxBeanDaoConfig, this);
        meterBeanDao = new MeterBeanDao(meterBeanDaoConfig, this);
        photoBeanDao = new PhotoBeanDao(photoBeanDaoConfig, this);

        registerDao(FileBean.class, fileBeanDao);
        registerDao(LoginBean.class, loginBeanDao);
        registerDao(MeasBoxBean.class, measBoxBeanDao);
        registerDao(MeterBean.class, meterBeanDao);
        registerDao(PhotoBean.class, photoBeanDao);
    }
    
    public void clear() {
        fileBeanDaoConfig.clearIdentityScope();
        loginBeanDaoConfig.clearIdentityScope();
        measBoxBeanDaoConfig.clearIdentityScope();
        meterBeanDaoConfig.clearIdentityScope();
        photoBeanDaoConfig.clearIdentityScope();
    }

    public FileBeanDao getFileBeanDao() {
        return fileBeanDao;
    }

    public LoginBeanDao getLoginBeanDao() {
        return loginBeanDao;
    }

    public MeasBoxBeanDao getMeasBoxBeanDao() {
        return measBoxBeanDao;
    }

    public MeterBeanDao getMeterBeanDao() {
        return meterBeanDao;
    }

    public PhotoBeanDao getPhotoBeanDao() {
        return photoBeanDao;
    }

}
